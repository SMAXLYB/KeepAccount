plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

apply from: '../version.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    // 渠道默认使用的配置
    defaultConfig {
        applicationId "life.chenshi.keepaccounts"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode appVersionCode
        versionName appVersionName
        // 声明多维度 对flavor进行分组
        flavorDimensions "normal"
        // ndk
        ndk{
            // abiFilters 'armeabi-v7a','x86'
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    // 签名配置
    signingConfigs {
        release {
            storeFile file('../key/keepaccount.jks')
            storePassword "xxxxxx"
            keyAlias "keepaccount"
            keyPassword 'xxxxxx'

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 签名配置
            signingConfig signingConfigs.release
            // 自动清理未使用资源 开启minifyEnabled有效
            // shrinkResources true
            // 对齐
            // zipAlignEnabled true
        }

        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
        }
    }

    // 多渠道
    productFlavors {
        // 正常包
        normal {
            // 分类到normal组下
            dimension 'normal'
            // manifest占位
            // manifestPlaceholders.put("CHANNEL","normal")
            // buildConfig动态配置
            // buildConfigField 'String','INDEX_URL','"http://chenshi.life"'
            // 资源动态配置
            // resValue 'string','app_name','Keep-Account'
            // 包名
            // applicationId 'com.example.keepaccount'
            // 发布携带混淆规则
            // consumerProguardFiles 'proguard-rules.pro','proguard-android.txt'
        }
    }

    // productFlavors.all{ flavor ->
    //     manifestPlaceholders.put("CHANNEL","normal")
    // }

    lintOptions{
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            // 如果是apk文件
            if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                def fileName
                if (variant.buildType.name.equals('release')) {
                    fileName = "Release_KeepAccount_${flavorName}_${variant.versionName}_${buildTime()}.apk"
                    // 修改apk名称
                    output.outputFileName = fileName
                    // 修改生成路径
                    variant.getPackageApplication().outputDirectory = new File("../apks")
                }
            }
        }
    }
}

dependencies {
    def lifecycle_version = "2.3.0"
    def room_version = "2.2.6"
    def navigation_version = "2.3.1"

    /**-------------------libs依赖-----------------------**/
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /**-------------------module依赖---------------------**/
    implementation project(':gson_extra')

    /**-------------------第三方库依赖--------------------**/
    // 基本库
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // viewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.fragment:fragment-ktx:1.3.1"
    // navigation
    implementation Libs.navigation_ui
    implementation Libs.navigation_fragment
    // lifeCycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    //liveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // room
    implementation Libs.room_runtime
    kapt Libs.room_compiler
    implementation Libs.room
    // 协程
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'
    // 图片加载
    // implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    // kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'io.coil-kt:coil:1.1.1'

    // 时间选择
    implementation 'com.github.loperSeven:DateTimePicker:0.3.1'
    // 图表
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    // dataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha05"
    // recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.2.0-beta01'
    // 内存泄漏
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
    // liveDataBus
    implementation 'com.jeremyliao:live-event-bus-x:1.7.3'
}

def buildTime() {
    return new Date().format('yyyyMMdddHHmm')
}